@page
@using RazorPagesMovie.Helpers
@model RazorPagesMovie.Pages.Movies.IndexModel

@{
    ViewData["Title"] = "Movies";
}

<p>
    <a asp-page="Create">Create New</a>
</p>

<form>
    <p>
        Filter by
        <select class="mr-4" name="genreTitle" asp-for="CurrentFilter" asp-items="Model.Genres">
            <option value="">All</option>
        </select>
        Search by title
        <input type="text" name="searchString" value="@Model.CurrentSearch" />
        <input type="submit" value="Filter" />
    </p>
</form>

<p>Number of movies found: @Model.MoviesCount</p>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index"
                   asp-route-sortBy="@Model.TitleSort"
                   asp-route-searchString="@Model.CurrentSearch"
                   asp-route-genreTitle="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Movies[0].Title)
                </a>
            </th>
            <th>
                <a asp-page="./Index"
                   asp-route-sortBy="@Model.PriceSort"
                   asp-route-searchString="@Model.CurrentSearch"
                   asp-route-genreTitle="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Movies[0].Price)
                </a>
            </th>
            <th>
                <a asp-page="./Index"
                   asp-route-sortBy="@Model.RatingSort"
                   asp-route-searchString="@Model.CurrentSearch"
                   asp-route-genreTitle="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Movies[0].Rating)
                </a>
            </th>
            <th>
                <a asp-page="./Index"
                   asp-route-sortBy="@Model.DateSort"
                   asp-route-searchString="@Model.CurrentSearch"
                   asp-route-genreTitle="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Movies[0].ReleaseDate)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies[0].Genre.GenreTitle)
            </th>
            <th>
                Token
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movies)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelIem => item.Rating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre.GenreTitle)
                </td>
                <td>
                    @Utility.GetLastChars(item.ConcurrencyToken)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Movies.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Movies.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortBy="@Model.CurrentSort"
   asp-route-genreTitle="@Model.CurrentFilter"
   asp-route-searchString="@Model.CurrentSearch"
   asp-route-pageIndex="@(Model.Movies.PageIndex - 1)"
   class="btn btn-primary @prevDisabled">
    Previous
</a>

<a asp-page="./Index"
   asp-route-sortBy="@Model.CurrentSort"
   asp-route-genreTitle="@Model.CurrentFilter"
   asp-route-searchString="@Model.CurrentSearch"
   asp-route-pageIndex="@(Model.Movies.PageIndex + 1)"
   class="btn btn-primary @nextDisabled">
    Next
</a>
